// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ProjectsPage() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"max-w-7xl mx-auto p-4 sm:p-6 lg:p-8\"><h1 class=\"text-4xl md:text-5xl font-extrabold text-slate-900 mb-8 pb-4\">Projects</h1><div id=\"projects-container\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"><p id=\"loading-state\" class=\"text-slate-600\">Fetching projects...</p></div></div><script>\n\t\t\tasync function fetchAndRenderProjects() {\n\t\t\t\tconst githubUsername = \"whalelogic\"; \n\t\t\t\tconst projectsContainer = document.getElementById('projects-container');\n\t\t\t\tconst loadingState = document.getElementById('loading-state');\n\n\t\t\t\tconst iconMap = {\n\t\t\t\t\t\"python\": \"/static/assets/technology-standard/python.png\",\n\t\t\t\t\t\"go\": \"/static/go.svg\",\n\t\t\t\t\t\"golang\": \"/static/golang.svg\",\n\t\t\t\t\t\"javascript\": \"/static/javascript.svg\",\n\t\t\t\t\t\"docker\": \"/static/docker.svg\",\n\t\t\t\t\t\"kubernetes\": \"/static/kubernetes.svg\",\n\t\t\t\t\t\"aws\": \"/static/aws.svg\",\n\t\t\t\t\t\"rust\": \"/static/rust-dark.svg\",\n\t\t\t\t\t\"c++\": \"/static/assets/icons/c++.svg\",\n\t\t\t\t\t\"linux\": \"/static/linux.svg\",\n\t\t\t\t\t\"fastapi\": \"/static/fast-api.svg\",\n\t\t\t\t\t\"flask\": \"/static/flask.svg\",\n\t\t\t\t\t\"django\": \"/static/assets/technology-standard/django.svg\",\n\t\t\t\t\t\"react\": \"/static/assets/technology-standard/react.svg\",\n\t\t\t\t\t\"vue\": \"/static/assets/technology-standard/vuejs.svg\",\n\t\t\t\t\t\"ansible\": \"/static/assets/technology-standard/ansible.svg\",\n\t\t\t\t\t\"terraform\": \"/static/assets/technology-standard/terraform.svg\",\n\t\t\t\t\t\"google-cloud\": \"/static/google-cloud.svg\",\n\t\t\t\t\t\"digitalocean\": \"/static/digitalocean.svg\",\n\t\t\t\t\t\"nodejs\": \"/static/nodejs.svg\",\n\t\t\t\t};\n\n\t\t\t\tconst defaultIcon = \"/static/whalelogic-3.png\";\n\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(`https://api.github.com/users/${githubUsername}/repos?sort=updated&direction=desc`);\n\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\tthrow new Error(`GitHub API error: ${response.status}`);\n\t\t\t\t\t}\n\t\t\t\t\tconst repos = await response.json();\n\n\t\t\t\t\tloadingState.remove();\n\n\t\t\t\t\trepos.forEach(repo => {\n\t\t\t\t\t\tif (repo.fork) return;\n\n\t\t\t\t\t\tconst card = document.createElement('div');\n\t\t\t\t\t\tcard.className = \"bg-white/60 backdrop-blur-lg rounded-2xl shadow-lg border border-slate-200 overflow-hidden flex flex-col group transform hover:-translate-y-2 transition-transform duration-300\";\n\n\t\t\t\t\t\tlet imageUrl = defaultIcon;\n\t\t\t\t\t\tif (repo.topics && repo.topics.length > 0) {\n\t\t\t\t\t\t\tfor (const topic of repo.topics) {\n\t\t\t\t\t\t\t\tif (iconMap[topic]) {\n\t\t\t\t\t\t\t\t\timageUrl = iconMap[topic];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (repo.language && iconMap[repo.language.toLowerCase()]) {\n\t\t\t\t\t\t\timageUrl = iconMap[repo.language.toLowerCase()];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet pillsHTML = '';\n\t\t\t\t\t\tif (repo.topics && repo.topics.length > 0) {\n\t\t\t\t\t\t\tpillsHTML = repo.topics.map(topic => `<span class=\"inline-block bg-sky-100 text-sky-800 text-xs font-medium px-2.5 py-1 rounded-full\">${topic}</span>`).join(' ');\n\t\t\t\t\t\t} else if (repo.language) {\n\t\t\t\t\t\t\tpillsHTML = `<span class=\"inline-block bg-slate-200 text-slate-800 text-xs font-medium px-2.5 py-1 rounded-full\">${repo.language}</span>`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcard.innerHTML = `\n\t\t\t\t\t\t\t<a href=\"${repo.html_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"block h-48\">\n\t\t\t\t\t\t\t\t<img src=\"${imageUrl}\" alt=\"Project image for ${repo.name}\" class=\"w-full h-full object-contain group-hover:opacity-90 transition-opacity duration-300 p-4\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<div class=\"p-6 flex-grow flex flex-col\">\n\t\t\t\t\t\t\t\t<h3 class=\"text-xl font-bold text-slate-900 mb-2\">${repo.name}</h3>\n\t\t\t\t\t\t\t\t<p class=\"text-slate-600 text-sm flex-grow mb-4\">${repo.description || \"No description available.\"}</p>\n\t\t\t\t\t\t\t\t<div class=\"flex flex-wrap gap-2\">\n\t\t\t\t\t\t\t\t\t${pillsHTML}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n\t\t\t\t\t\tprojectsContainer.appendChild(card);\n\t\t\t\t\t});\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\tloadingState.innerText = \"Failed to fetch projects. Please check the username or API rate limits.\";\n\t\t\t\t\tconsole.error(\"Error fetching GitHub projects:\", error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdocument.addEventListener('DOMContentLoaded', fetchAndRenderProjects);\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Layout("My Projects").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
