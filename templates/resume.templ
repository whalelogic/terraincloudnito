package templates

import "github.com/whalelogic/templ-go/models"
import "github.com/whalelogic/templ-go/components"

templ ResumePage(profile models.Profile) {
	@Layout(profile.Name + " - Resume") {
		<div class="max-w-4xl mx-auto p-4 sm:p-6 lg:p-8 space-y-12">

			<div class="flex flex-col md:flex-row items-center gap-8 p-8 bg-white/60 backdrop-blur-lg rounded-2xl shadow-lg border border-slate-200">
				<div class="flex-shrink-0">
					<img src={ templ.SafeURL(profile.AvatarURL) } alt={ profile.Name } class="h-40 w-40 rounded-full object-cover border-4 border-indigo-500 shadow-md"/>
				</div>
				<div class="text-center md:text-left">
					<h1 class="text-4xl md:text-5xl font-extrabold text-slate-900">{ profile.Name }</h1>
					<p class="text-xl text-indigo-600 font-semibold mt-1">{ profile.Title }</p>
					<p class="text-slate-600 mt-4">{ profile.Bio }</p>
				</div>
                <div class="mt-4 p-2">
                  @components.Button("Download \n PDF File", "/resume/download", true) 
                </div>
			</div>

			<div>
				<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Professional Summary</h2>
				<div class="p-4 bg-white/50 rounded-lg border border-slate-200">
					<p class="text-slate-600">With extensive experience in cloud-native technologies, I specialize in developing robust backend systems using Go and constructing sophisticated data pipelines. My expertise in Python extends to advanced data modeling and in-depth analysis, allowing me to architect and implement scalable, data-intensive applications. I am adept at leveraging the power of modern cloud platforms to deliver high-performance, resilient solutions.</p>
				</div>
			</div>

			<div>
				<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Experience</h2>
				<div class="space-y-8">
					for _, exp := range profile.Experiences {
						<div class="pl-4 border-l-4 border-slate-200">
							<div class="flex justify-between items-baseline">
								<h3 class="text-xl font-bold text-slate-900">{ exp.Role }</h3>
								<p class="text-sm font-medium text-slate-500">{ exp.StartDate } - { exp.EndDate }</p>
							</div>
							<p class="text-md font-semibold text-indigo-700">{ exp.CompanyName }</p>
							<p class="text-slate-600 mt-2">{ exp.Description }</p>
						</div>
					}
				</div>
			</div>

			<div>
				<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Skills</h2>
				<div class="flex flex-wrap gap-3">

					for _, skill := range profile.Skills {
						<span class={ "text-sm font-medium px-4 py-2 rounded-full shadow-sm", getSkillColor(skill.Proficiency) }>
							{ skill.Name } - <span class="opacity-80">{ skill.Proficiency }</span>
						</span>
					}
				</div>
				<p align="center">
				  <a href="https://skillicons.dev">
				    <img class="mt-8" src="https://skillicons.dev/icons?i=linux,regex,docker,kubernetes,github,bash,alpinejs,nodejs,git,terraform,ansible,pytorch,tensorflow,vscode,postgres,mongodb,dynamodb,fastapi,htmx&theme=dark&perline=8" />
				  </a>
				</p>
			</div>

			<div>
				<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Education</h2>
				<div class="space-y-4">
					for _, edu := range profile.Educations {
						<div class="p-4 bg-white/50 rounded-lg border border-slate-200">
							<h3 class="text-lg font-bold text-slate-900">{ edu.Degree }</h3>
							<p class="font-semibold text-indigo-700">{ edu.FieldOfStudy }</p>
							<p class="text-slate-600">{ edu.SchoolName }</p>
						</div>
					}
				</div>
			</div>

			<div class="grid grid-cols-1 md:grid-cols-2 gap-12">
				<div>
					<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Languages</h2>
					<div class="flex flex-wrap gap-3">
						for _, lang := range profile.Languages {
							<span class="bg-slate-100 text-slate-800 text-sm font-medium px-3 py-1 rounded-md">
								{ lang.Name } ({ lang.Proficiency })
							</span>
						}
					</div>
				</div>
				<div>
					<h2 class="text-3xl font-bold text-slate-800 mb-6 border-b-2 border-indigo-200 pb-2">Interests</h2>
					<div class="flex flex-wrap gap-3">
						for _, interest := range profile.Interests {
							<span class="bg-slate-100 text-slate-800 text-sm font-medium px-3 py-1 rounded-md">
								{ interest.Name }
							</span>
						}
					</div>
				</div>
			</div>
		</div>
	}
}

// Helper function to assign colors based on skill proficiency
func getSkillColor(proficiency string) string {
	switch proficiency {
	case "Expert":
		return "bg-green-200 text-gray-800"
	case "Advanced":
		return "bg-sky-100 text-sky-800"
	case "Intermediate":
		return "bg-emerald-100 text-emerald-800"
    case "Professional":
        return "bg-green-500 text-gray-100"
	default:
		return "bg-slate-100 text-slate-800"
	}
}
